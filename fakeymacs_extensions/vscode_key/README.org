#+STARTUP: showall indent

* Fakeymacs extension

** ■ VSCode 用のキーの設定を行う

VSCode 用のキーの設定を行う拡張機能です。

*** コンフィグレーションパラメータ

|-------------------------------------+------------------------------------------------------------------------------------------------------|
| Configuration parameter             | Description                                                                                          |
|-------------------------------------+------------------------------------------------------------------------------------------------------|
| vscode_target                       | VSCode 用のキーバインドを利用するアプリケーションソフトを指定する                                    |
| use_ctrl_atmark_for_mark            | 日本語キーボードを利用する際、VSCode で  C-@ をマーク用のキーとして使うかどうかを指定する            |
| use_direct_input_in_vscode_terminal | VSCode の Terminal内 で ４つのキー（C-k、C-r、C-s、C-y）のダイレクト入力機能を使うかどうかを指定する |
|-------------------------------------+------------------------------------------------------------------------------------------------------|

※ vscode_target 変数の初期値には、ブラウザのアプリケーションソフトも複数指定しています。
これは、ブラウザで github1s.com にアクセスしたときに VSCode 用のキーバインドを利用できる
ようにするためです。github1s.com については、次の記事を参考としてください。

- https://forest.watch.impress.co.jp/docs/serial/yajiuma/1306113.html

※ use_ctrl_atmark_for_mark 変数は、VSCode で C-@ を Toggle Terminal 用のキーとして使えるように
するために設けた設定です。
初期値は False としており、C-@ を Toggle Terminal 用のキーとして使えるようにしています。
True に設定した場合でも Toggle Terminal 用のキーとして C-<半角／全角> が使えます。

※ use_direct_input_in_vscode_terminal 変数は初期値を False（使わない）としており、
仕様を理解した方のみ使う機能としています。use_direct_input_in_vscode_terminal 変数を True に
した際の仕様については、以降の説明を参照してください。

*** キーバインド

**** ● 「カーソル移動」のキー設定

|---------+--------------------+--------------------------------------------------------+-------------|
| Keybind | Fakeymacs Function | VSCode Command                                         | Description |
|---------+--------------------+--------------------------------------------------------+-------------|
| M-g p   | previous_error     | Go to Previous Problem in Files (Error, Warning, Info) |             |
| M-g M-p | previous_error     | Go to Previous Problem in Files (Error, Warning, Info) |             |
| M-g n   | next_error         | Go to Next Problem in Files (Error, Warning, Info)     |             |
| M-g M-n | next_error         | Go to Next Problem in Files (Error, Warning, Info)     |             |
| Ctl-x ` | next_error         | Go to Next Problem in Files (Error, Warning, Info)     |             |
|---------+--------------------+--------------------------------------------------------+-------------|

**** ● 「バッファ / ウィンドウ操作」のキー設定

|-----------+--------------------+---------------------------------------------------------+-------------|
| Keybind   | Fakeymacs Function | VSCode Command                                          | Description |
|-----------+--------------------+---------------------------------------------------------+-------------|
| Ctl-x k   | kill_buffer        | View: Close Editor                                      |             |
| Ctl-x b   | switch_to_buffer   | View: Quick Open Privious Recently Used Editor in Group |             |
| Ctl-x C-b | list_buffers       | View: Show All Editors By Most Recently Used            |             |
|-----------+--------------------+---------------------------------------------------------+-------------|

****  「エディタ操作」のキー設定

|----------------+------------------------------+-------------------------------------------+-------------|
| Keybind        | Fakeymacs Function           | VSCode Command                            | Description |
|----------------+------------------------------+-------------------------------------------+-------------|
| Ctl-x 0        | delete_group                 | View: Close All Editors in Group          |             |
| Ctl-x 1        | delete_other_groups          | View: Close Editors in Other Groups       |             |
| Ctl-x 2        | split_editor_below           | View: Split Editor Orthogonal             |             |
| Ctl-x 3        | split_editor_right           | View: Split Editor                        |             |
| Ctl-x o        | other_group                  | View: Navigate Between Editor Groups      |             |
| C-<数字キー>   | switch_focus(<数字キーの値>) | View: Focus Side Bar or n-th Editor Group |             |
| C-A-<数字キー> | switch_focus(<数字キーの値>) | View: Focus Side Bar or n-th Editor Group |             |
|----------------+------------------------------+-------------------------------------------+-------------|

※ C-<数字キー> は、use_ctrl_digit_key_for_digit_argument 変数 False の場合に機能します。
True の場合（数引数の指定用として使われる）にこの機能を利用できるようにするため、C-A-<数字キー>
の定義もしています。

****  「マルチカーソル」のキー設定

|---------+-------------------------------+--------------------------------------------+-------------|
| Keybind | Fakeymacs Function            | VSCode Command or Command ID               | Description |
|---------+-------------------------------+--------------------------------------------+-------------|
| C-A-p   | mark_up                       | cursorColumnSelectUp                       |             |
| C-A-n   | mark_down                     | cursorColumnSelectDown                     |             |
| C-A-b   | mark + backward_char          | cursorLeftSelect -like                     |             |
| C-A-f   | mark + forward_char           | cursorRightSelect -like                    |             |
| C-A-a   | mark + move_beginning_of_line | cursorHomeSelect -like                     |             |
| C-A-e   | mark + move_end_of_line       | cursorEndSelect -like                      |             |
| C-A-d   | mark_next_like_this           | Add Selection To Next Find Match           |             |
| C-A-S-d | mark_all_like_this            | Select All Occurrences of Find Match       |             |
| C-A-r   | skip_to_previous_like_this    | Move Last Selection To Previous Find Match |             |
| C-A-s   | skip_to_next_like_this        | Move Last Selection To Next Find Match     |             |
|---------+-------------------------------+--------------------------------------------+-------------|

****  「ターミナル操作」のキー設定

|-----------------+--------------------+------------------------------------------+---------------------|
| Keybind         | Fakeymacs Function | VSCode Command                           | Description         |
|-----------------+--------------------+------------------------------------------+---------------------|
| C-S-` (C-~)     | create_terminal    | View: Toggle Terminal -like              | US Keyboard の場合  |
| C-S-@ (C-`)     | create_terminal    | View: Toggle Terminal -like              | JIS Keyboard の場合 |
| C-S-<半角/全角> | create_terminal    | View: Toggle Terminal -like              | JIS Keyboard の場合 |
| C-`             | toggle_terminal    | Terminal: Create New Integrated Terminal | US Keyboard の場合  |
| C-@             | toggle_terminal    | Terminal: Create New Integrated Terminal | JIS Keyboard の場合 |
| C-<半角/全角>   | toggle_terminal    | Terminal: Create New Integrated Terminal | JIS Keyboard の場合 |
|-----------------+--------------------+------------------------------------------+---------------------|

※ C-@ は、use_ctrl_atmark_for_mark が False の場合に機能します。

※ use_direct_input_in_vscode_terminal 変数を True にしている場合には、上記のいずれかのキーを押下して
ターミナルに移行することで、４つのキー（C-k、C-r、C-s、C-y）の入力ができるようになります。
side_of_ctrl_key 変数で設定した側でない Ctrl キーを使うか、C-q を前置することでも４つのキーを利用する
ことができます。

※ ターミナルで C-k を利用できるようにするには、VSCode の 設定で terminal.integrated.allowChords
を false にする必要があります。

- https://code.visualstudio.com/docs/editor/integrated-terminal#_chord-keybindings-in-the-terminal

※ ターミナルで C-s を利用できるようにするには、bash で stty stop undef の設定をする必要があります。
この設定をしないでこのキーを押下すると stop から戻れなくなりますのでご注意ください。

※ use_direct_input_in_vscode_terminal 変数を True にしている場合に Terminal から抜ける場合は、
次のキーを利用するようにしてください。先に説明した４つのキーが VSCode のショートカットキーとして
認識されるように戻ります。

|----------------+------------------------------+-------------------------------------+---------------------|
| Keybind        | Function                     | VSCode Command                      | Description         |
|----------------+------------------------------+-------------------------------------+---------------------|
| C-`            | toggle_terminal              | Create New Integrated Terminal      | US Keyboard の場合  |
| C-@            | toggle_terminal              | Create New Integrated Terminal      | JIS Keyboard の場合 |
| C-<半角/全角>  | toggle_terminal              | Create New Integrated Terminal      | JIS Keyboard の場合 |
|----------------+------------------------------+-------------------------------------+---------------------|
| Ctl-x o        | other_group                  | Navigate Between Editor Groups      |                     |
| C-<数字キー>   | switch_focus(<数字キーの値>) | Focus Side Bar or n-th Editor Group |                     |
| C-A-<数字キー> | switch_focus(<数字キーの値>) | Focus Side Bar or n-th Editor Group |                     |
|----------------+------------------------------+-------------------------------------+---------------------|

※ マウスのクリックでカーソル位置の変更を行うと、この状態の認識に齟齬が発生することがあります。
その場合は、上記のいずれかのキーを押下することにより、Fakeymacs に現在の状態を再認識させるように
してください。

****  「その他」のキー設定

|---------+--------------------------+---------------------+-------------|
| Keybind | Fakeymacs Function       | VSCode Command      | Description |
|---------+--------------------------+---------------------+-------------|
| M-x     | execute_extended_command | Show All Commands   |             |
| M-;     | comment_dwim             | Toggle Line Comment |             |
|---------+--------------------------+---------------------+-------------|

※ Meta（M-）で Esc を利用したい場合には、use_esc_as_meta 変数を True にしてください。
True にした場合に Esc を入力するには、Esc を二回押下してください。

*** 関数（Functions）

**** ■ vscodeExecuteCommand

VSCode のコマンドを実行する関数を返す

この関数を使うことにより、ショートカットキーが割り当てられていない VSCode のコマンドでも、
Fakeymacs から実行できるようにしています

***** Function

#+BEGIN_EXAMPLE
def vscodeExecuteCommand(command):
#+END_EXAMPLE

***** Parameters

|-----------+----------------------------------------------------------------------------|
| Parameter | Description                                                                |
|-----------+----------------------------------------------------------------------------|
| command   | VSCode の Command Palette で実行するコマンドの文字列（短縮形の場合も有り） |
|-----------+----------------------------------------------------------------------------|

***** Returns

- 引数で指定したコマンドを実行する関数

*** 留意事項

※ vscodeExecuteCommand 関数内では日本語入力モードの切り替えを行っているのですが、Google
日本語入力を利用して入力モードのポップアップを表示する設定にしている場合、このポップアップが
何度も表示される症状が発生するようです。このため、ポップアップを非表示にする設定にしてご利用
ください。

- https://memotora.com/2014/10/05/google-ime-pop-up-setting/

※ Microsoft Excel や Word などの Office系アプリを使ってコピー＆ペーストをした際、「Ctrl」と表示
される「貼り付けオプション」ボタンが表示される場合があります。
これが Emacsキーバインドで利用している Ctrl キーの押下を検知して、想定外の動きをしてしまうようです。
今のところ本設定での対策は難しいと思っておりますので、以下のページで紹介している「貼り付けオプション」
ボタンを消す対応で回避してください。

- http://ciao.aoten.jp/ciao/2015/03/word-54e8.html

※ Keyhac のクリップボードリスト画面で migemo 検索を可能とするためには、辞書ファイルを登録する必要
があります。次のページに分かりやすく説明がされていますので、参考としてください。
（dictフォルダの中をすべてコピーするのではなく、dict/utf-8 の中のファイルをコピーするところが
ポイントです。また、migemo 検索するには、検索文字列の一文字目を大文字で指定する必要があります。）

- http://blog.livedoor.jp/ryman_trainee/archives/1042315792.html

※ Logicool のマウス で SetPoint アプリによりキーストロークの割当を行った場合、Keyhac のフックを
OFF にしてから割当をしないと正常に動作しませんでした。他のキーストロークを設定するソフトの場合
にも同様の問題が発生する可能性があると思いますので、ご留意ください。

※ ブラウザで github1s.com を指定した際に開く VSCode の画面では、M-k や Ctl-x k で
発行している C-F4 がブラウザ側でキャッチされ、ブラウザのタブを閉じようとしてしまいます。
このため、vscode_target 変数に指定したブラウザで github1s.com を開いて Ctl-x k を実行した
場合には、コマンドパレットで View: Close Editor を実行するようにし、VSCode の機能が働くように
しています。
M-k は 従来どおり C-F4 を発行するのみの機能としていますので、github1s.com を利用する場合
には、M-k と Ctl-x k を使い分けるようにしてください。
（この対応により、ブラウザで github1s.com を開いていない場合に Ctl-x k を発行すると、
おかしな動き（F1 の実行により、ヘルプの画面が表示される）となります。ご留意ください。）

※ ブラウザで github1s.com を指定した際に開く VSCode の画面では、Ctl-x b で発行している
C-Tab がブラウザ側でキャッチされ、ブラウザのタブを切り替えてしまいます。
このため、vscode_target 変数に指定したブラウザで github1s.com を開いて Ctl-x b を実行した
場合には、コマンドパレットで View: Quick Open Privious Recently Used Editor in Group を
実行するようにし、VSCode の機能が働くようにしています。
C-Tab は 従来どおりブラウザで機能しますので、github1s.com を利用する場合には、C-Tab と
Ctl-x b を使い分けるようにしてください。
（この対応により、ブラウザで github1s.com を開いていない場合に Ctl-x b を発行すると、
おかしな動き（F1 の実行により、ヘルプの画面が表示される）となります。ご留意ください。）
